version: '3.11'

services:
  db:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - static_volume:/app/backend/static
      - media_volume:/app/backend/media
    ports:
      - "8000:8000"
    depends_on:
      - db

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - IS_DOCKER=true
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - node_modules:/app/frontend/node_modules
      - static_volume:/app/frontend/public/static
    depends_on:
      - db
      - backend

  nginx:
    container_name: nginx
    working_dir: /app
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/frontend/public/static
      - media_volume:/app/backend/media
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - frontend
      - backend

volumes:
  pg_data:
  node_modules:
  static_volume:
  media_volume: